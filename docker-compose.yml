version: '3.8'

services:
  app:
    image: myagentview-crm:${TAG:-latest}
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crm-app
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - PORT=3000
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-crm_db}
      - POSTGRES_USER=${POSTGRES_USER:-crm_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-your_strong_password_here}
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret}
    ports:
      - "${APP_PORT:-3000}:3000"
    networks:
      - crm-network
    healthcheck:
      test: ["CMD", "/usr/local/bin/docker-healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  db:
    image: postgres:15-alpine
    container_name: crm-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-crm_db}
      - POSTGRES_USER=${POSTGRES_USER:-crm_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-your_strong_password_here}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./supabase-export/create_tables.sql:/docker-entrypoint-initdb.d/01-create_tables.sql
      - ./supabase-export/create_auth_tables.sql:/docker-entrypoint-initdb.d/02-create_auth_tables.sql
      - ./supabase-export/insert_data.sql:/docker-entrypoint-initdb.d/03-insert_data.sql
      - ./setup-db-permissions.sql:/docker-entrypoint-initdb.d/04-setup-permissions.sql
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - crm-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-crm_user} -d ${POSTGRES_DB:-crm_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M

networks:
  crm-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local