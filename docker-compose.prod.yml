version: '3.8'

services:
  # PostgreSQL database
  db:
    image: postgres:16-alpine
    container_name: crm-db-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: crm_db
      POSTGRES_USER: crm_user
      POSTGRES_PASSWORD: your_strong_password_here
    volumes:
      - postgres-data-prod:/var/lib/postgresql/data
    networks:
      - crm-network-prod
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crm_user -d crm_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Backend application
  app:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: crm-app-prod
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3000
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: crm_db
      POSTGRES_USER: crm_user
      POSTGRES_PASSWORD: your_strong_password_here
      JWT_SECRET: your_jwt_secret_here
      VITE_SUPABASE_URL: https://esmboovriahdhtvvxgzn.supabase.co
      VITE_SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVzbWJvb3ZyaWFoZGh0dnZ4Z3puIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ3MzAwMTgsImV4cCI6MjA2MDMwNjAxOH0.8t1o1yk8ozklE5ltv3mNV7LHKnKZe9kdNzFTd29klIA
    ports:
      - "3000:3000"
    networks:
      - crm-network-prod
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/crm/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  crm-network-prod:
    driver: bridge

volumes:
  postgres-data-prod: